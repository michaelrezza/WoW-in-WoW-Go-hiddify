name: Install and Update WARP CLI

on:
  schedule:
    - cron: "0 * * * *" # Runs every hour
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  install-update-warp:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Required Scripts and Templates
        run: |
          set -e
          mkdir -p ./scripts
          wget -O ./scripts/install-warp.sh https://raw.githubusercontent.com/Ptechgithub/warp/main/endip/install.sh
          wget -O ./scripts/warp-go.sh https://raw.githubusercontent.com/michaelrezza/WoW-in-WoW-Go-hiddify/main/scripts/warp-go.sh
          wget -O ./scripts/ipv6-scan.sh https://raw.githubusercontent.com/michaelrezza/WoW-in-WoW-Go-hiddify/main/scripts/ipv6-scan.sh
          wget -O ./scripts/update-ip-port.py https://raw.githubusercontent.com/michaelrezza/WoW-in-WoW-Go-hiddify/main/scripts/update-ip-port.py
          wget -O config-template.json https://raw.githubusercontent.com/michaelrezza/WoW-in-WoW-Go-hiddify/main/config-template.json
          chmod +x ./scripts/*.sh
          ls -l ./scripts/ # Debug: List scripts and permissions

      - name: Update System & Install Dependencies
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y wireguard-tools curl jq fping apt-transport-https lsb-release ca-certificates gnupg

      - name: Fix NO_PUBKEY Error & Add Cloudflare GPG Key
        run: |
          set -e
          sudo rm -f /usr/share/keyrings/cloudflare-archive-keyring.gpg
          curl -fsSL https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/downloads/cloudflare-warp.asc | sudo tee /usr/share/keyrings/cloudflare-archive-keyring.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/cloudflare-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-warp.list > /dev/null
          sudo apt-get update || echo "⚠️ Warning: APT update failed, but continuing..."

      - name: Install or Update WARP-CLI
        run: |
          set -e
          sudo apt-get install -y cloudflare-warp cloudflared || echo "⚠️ Warning: WARP-CLI installation failed, skipping..."

      - name: Verify WARP-CLI Installation
        run: |
          warp-cli --version || echo "⚠️ Warning: WARP-CLI installation failed!"

      - name: Download and Install WARP-GO
        run: |
          set -e
          chmod +x ./scripts/install-warp.sh
          sudo ./scripts/install-warp.sh || echo "⚠️ Warning: WARP-GO installation failed!"

      - name: Ensure Scripts Are Executable (Double Check)
        run: |
          chmod +x ./scripts/*.sh
          ls -l ./scripts/ # Debug: List scripts and permissions

      - name: Create hiddify-config.json if not exists
        run: |
          if [ ! -f "hiddify-config.json" ]; then
            echo "hiddify-config.json does not exist. Creating from template..."
            cp config-template.json hiddify-config.json
          fi

      - name: Run WARP Setup & IPv6 Scan
        run: |
          set -e
          for i in {1..3}; do
            echo "2" | bash ./scripts/warp-go.sh && break
            sleep 5
          done || echo "⚠️ Warning: WARP setup failed after multiple attempts!"

      - name: Update IPv6 & Port in Config and Generate Keys
        run: |
          set -e
          python3 ./scripts/update-ip-port.py || echo "❌ Error: IPv6 update failed! Check script output."

      - name: Ensure Correct Permissions for hiddify-config.json
        run: |
          chmod 644 hiddify-config.json

      - name: Set up Git identity
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"

      - name: Commit and Push Changes
        run: |
          git add hiddify-config.json || echo "⚠️ No changes to commit."
          git diff --staged --patch || true # Debug: Show diff if commit happens
          git diff --cached --quiet || git commit -m "Auto-update WARP-in-WARP IPv6 & Port" && git push || echo "⚠️ Push failed."

      - name: Auto-Restart on Failure
        if: failure()
        run: |
          echo "Workflow failed. Triggering auto-restart..."
          gh workflow run update-warp.yml
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
