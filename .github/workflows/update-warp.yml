name: Auto Update WARP-in-WARP IPv6

on:
  schedule:
    - cron: '0 * * * *'  # Runs every hour
  workflow_dispatch:      # Allows manual execution

jobs:
  update_warp_ipv6:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard-tools curl jq fping

      - name: Install WARP-GO
        run: |
          wget -O install-warp.sh https://raw.githubusercontent.com/Ptechgithub/warp/main/endip/install.sh
          chmod +x install-warp.sh
          sudo ./install-warp.sh

      - name: Download Required Scripts
        run: |
          mkdir -p ./scripts
          wget -O ./scripts/warp-go.sh https://raw.githubusercontent.com/michaelrezza/WoW-in-WoW-Go-hiddify/main/scripts/warp-go.sh
          wget -O ./scripts/ipv6-scan.sh https://raw.githubusercontent.com/michaelrezza/WoW-in-WoW-Go-hiddify/main/scripts/ipv6-scan.sh
          wget -O ./scripts/update-ip-port.py https://raw.githubusercontent.com/michaelrezza/WoW-in-WoW-Go-hiddify/main/scripts/update-ip-port.py
          chmod +x ./scripts/*.sh

      - name: Run WARP-in-WARP Setup
        run: |
          for i in {1..3}; do
            echo "2" | bash ./scripts/warp-go.sh && break
            sleep 5
          done

      - name: Run IPv6 Scanner
        run: |
          for i in {1..3}; do
            bash ./scripts/ipv6-scan.sh > ipv6_scan.txt && break
            sleep 5
          done

      - name: Update IPv6 & Port in Config
        run: |
          python3 ./scripts/update-ip-port.py

      - name: Set Up Git Identity
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"

      - name: Commit and Push Changes
        run: |
          git add hiddify-config.json || echo "‚ö†Ô∏è No changes."
          git diff --cached --quiet || (git commit -m "üîÑ Auto-update WARP-in-WARP IPv6 & Port" && git push) || echo "‚ö†Ô∏è Push failed."

      - name: Force Update if No Changes Detected
        if: always()
        run: |
          if ! git diff --cached --quiet; then
            echo "üîÑ Changes detected, pushing update..."
          else
            echo "üîÑ No changes detected, forcing update..."
            date +%s > force-update.txt
            git add force-update.txt
            git commit -m "üîÑ Force update"
            git push || echo "‚ö†Ô∏è Force push failed."
          fi

      - name: Auto-Restart on Failure
        if: failure()
        run: |
          gh workflow run update-warp.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
