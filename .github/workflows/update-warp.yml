name: Auto Update WARP in WARP

on:
  schedule:
    - cron: '0 * * * *'   # Runs every hour
  workflow_dispatch:        # Manual trigger

jobs:
  update_warp:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard-tools curl jq fping

      - name: Download and Install WARP-GO
        run: |
          wget -O install-warp.sh https://raw.githubusercontent.com/Ptechgithub/warp/main/endip/install.sh
          chmod +x install-warp.sh
          sudo ./install-warp.sh

      - name: Ensure Scripts Are Executable
        run: |
          chmod +x ./scripts/warp-go.sh ./scripts/ipv6-scan.sh ./scripts/update-ip-port.py || echo "‚ö†Ô∏è No executable files found!"

      - name: Run WARP Setup
        run: |
          if [ -f ./scripts/warp-go.sh ]; then
            echo "‚úîÔ∏è warp-go.sh found. Running setup..."
            bash ./scripts/warp-go.sh || { echo "‚ùå warp-go.sh failed! Restarting..."; bash ./scripts/warp-go.sh; }
          else
            echo "‚ùå warp-go.sh not found! Please make sure the file exists."
            exit 1
          fi
          if [ $? -eq 0 ]; then
            echo "‚úîÔ∏è WARP setup completed successfully."
          else
            echo "‚ùå WARP setup failed after multiple attempts."
            exit 1
          fi

      - name: Run IPv6 Scanner
        run: |
          if [ -f ./scripts/ipv6-scan.sh ]; then
            echo "‚úîÔ∏è ipv6-scan.sh found. Running IPv6 scan..."
            bash ./scripts/ipv6-scan.sh || { echo "‚ùå ipv6-scan.sh failed! Restarting..."; bash ./scripts/ipv6-scan.sh; }
          else
            echo "‚ùå ipv6-scan.sh not found! Please make sure the file exists."
            exit 1
          fi
          if [ $? -eq 0 ]; then
            echo "‚úîÔ∏è IPv6 scan completed successfully."
          else
            echo "‚ùå IPv6 scan failed after multiple attempts."
            exit 1
          fi

      - name: Update Hiddify Config
        run: |
          if [ -f ./scripts/update-ip-port.py ]; then
            echo "‚úîÔ∏è update-ip-port.py found. Running update..."
            python3 ./scripts/update-ip-port.py || { echo "‚ùå update-ip-port.py failed! Restarting..."; python3 ./scripts/update-ip-port.py; }
          else
            echo "‚ùå update-ip-port.py not found! Please make sure the file exists."
            exit 1
          fi
          if [ $? -eq 0 ]; then
            echo "‚úîÔ∏è Hiddify config updated successfully."
          else
            echo "‚ùå Hiddify config update failed after multiple attempts."
            exit 1
          fi

      - name: Commit and Push Changes
        run: |
          git add hiddify-config.json || echo "‚ö†Ô∏è No files to update."
          git commit -m "üîÑ Auto-update fastest WARP in WARP IPv6" || echo "‚ö†Ô∏è No changes to commit."
          git push || echo "‚ö†Ô∏è Failed to push changes."

      - name: Auto-Restart on Failure
        if: failure()
        run: |
          echo "‚ùå Workflow failed! Restarting..."
          gh workflow run update-warp.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}