name: Auto Update WARP-in-WARP IPv6

on:
  schedule:
    - cron: '0 * * * *'   # Runs every hour
  workflow_dispatch:

jobs:
  update_warp_ipv6:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard-tools curl jq fping

      - name: Download and Install WARP-GO
        run: |
          wget -O install-warp.sh https://raw.githubusercontent.com/Ptechgithub/warp/main/endip/install.sh
          chmod +x install-warp.sh
          sudo ./install-warp.sh

      - name: Run WARP-1 (Main)
        run: |
          warp-cli disconnect || true
          warp-cli connect
          echo "‚úÖ WARP-1 started."

      - name: Run WARP-in-WARP (Nested WARP)
        run: |
          warp-cli disconnect || true
          warp-cli connect --mode proxy
          echo "‚úÖ WARP-in-WARP started."

      - name: Get New IPv6 from WARP-in-WARP
        run: |
          NEW_IPV6=$(wg show warp0 endpoints | cut -d':' -f1)
          if [ -z "$NEW_IPV6" ]; then
            echo "‚ùå Failed to retrieve new IPv6. Exiting..."
            exit 1
          fi
          echo "üîÑ New IPv6: $NEW_IPV6"
          echo "NEW_IPV6=$NEW_IPV6" >> $GITHUB_ENV

      - name: Generate New IPv6 & Update Config
        run: |
          python3 ./scripts/update-ip-port.py --ipv6 "$NEW_IPV6"

      - name: Set up Git identity
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"

      - name: Commit and Push Changes
        run: |
          git add hiddify-config.json || echo "‚ö†Ô∏è No changes."
          git diff --cached --quiet || git commit -m "üîÑ Auto-update WARP-in-WARP IPv6: $NEW_IPV6"
          git push || echo "‚ö†Ô∏è Failed to push changes."

      - name: Auto-Restart on Failure
        if: failure()
        run: |
          gh workflow run update-warp.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
